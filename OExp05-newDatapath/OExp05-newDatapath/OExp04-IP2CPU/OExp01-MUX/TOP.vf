////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : TOP.vf
// /___/   /\     Timestamp : 04/11/2017 20:09:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/.Xilinx/jizu/OExp05-newDatapath/OExp04-IP2CPU -sympath C:/.Xilinx/jizu/OExp05-newDatapath/OExp04-IP2CPU/OExp01-MUX/ipcore_dir -intstyle ise -family kintex7 -verilog C:/.Xilinx/jizu/OExp05-newDatapath/OExp04-IP2CPU/OExp01-MUX/TOP.vf -w C:/.Xilinx/jizu/OExp05-newDatapath/OExp04-IP2CPU/OExp01-MUX/TOP.sch
//Design Name: TOP
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Data_path_MUSER_TOP(ALUSrc_B, 
                           ALU_Control, 
                           Branch, 
                           clk, 
                           Data_in, 
                           inst_field, 
                           Jump, 
                           MemtoReg, 
                           RegDst, 
                           RegWrite, 
                           rst, 
                           ALU_out, 
                           Data_out, 
                           PC_out);

    input ALUSrc_B;
    input [2:0] ALU_Control;
    input Branch;
    input clk;
    input [31:0] Data_in;
    input [25:0] inst_field;
    input Jump;
    input MemtoReg;
    input RegDst;
    input RegWrite;
    input rst;
   output [31:0] ALU_out;
   output [31:0] Data_out;
   output [31:0] PC_out;
   
   wire [31:0] branch_pc;
   wire [31:0] Imm_32;
   wire N0;
   wire [31:0] pc_4;
   wire V5;
   wire [31:0] XLXN_1;
   wire [31:0] XLXN_3;
   wire [31:0] XLXN_12;
   wire XLXN_14;
   wire XLXN_15;
   wire [4:0] XLXN_16;
   wire [31:0] XLXN_17;
   wire [31:0] XLXN_27;
   wire [31:0] ALU_out_DUMMY;
   wire [31:0] Data_out_DUMMY;
   wire [31:0] PC_out_DUMMY;
   
   assign ALU_out[31:0] = ALU_out_DUMMY[31:0];
   assign Data_out[31:0] = Data_out_DUMMY[31:0];
   assign PC_out[31:0] = PC_out_DUMMY[31:0];
   ALU  XLXI_1 (.A(XLXN_1[31:0]), 
               .ALU_operation(ALU_Control[2:0]), 
               .B(XLXN_3[31:0]), 
               .Co(), 
               .overflew(), 
               .res(ALU_out_DUMMY[31:0]), 
               .zero(XLXN_14));
   Regs  XLXI_2 (.clk(clk), 
                .L_S(RegWrite), 
                .rst(rst), 
                .R_addr_A(inst_field[25:21]), 
                .R_addr_B(inst_field[20:16]), 
                .Wt_addr(XLXN_16[4:0]), 
                .Wt_data(XLXN_17[31:0]), 
                .rdata_A(XLXN_1[31:0]), 
                .rdata_B(Data_out_DUMMY[31:0]));
   REG32  XLXI_3 (.CE(V5), 
                 .clk(clk), 
                 .D(XLXN_27[31:0]), 
                 .rst(rst), 
                 .Q(PC_out_DUMMY[31:0]));
   MUX2T1_32  XLXI_4 (.I0(Data_out_DUMMY[31:0]), 
                     .I1(Imm_32[31:0]), 
                     .s(ALUSrc_B), 
                     .o(XLXN_3[31:0]));
   MUX2T1_32  XLXI_5 (.I0(pc_4[31:0]), 
                     .I1(branch_pc[31:0]), 
                     .s(XLXN_15), 
                     .o(XLXN_12[31:0]));
   MUX2T1_32  XLXI_6 (.I0(XLXN_12[31:0]), 
                     .I1({pc_4[31:28], inst_field[25:0], N0, N0}), 
                     .s(Jump), 
                     .o(XLXN_27[31:0]));
   add_32  XLXI_7 (.a(PC_out_DUMMY[31:0]), 
                  .b({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, V5, N0, 
         N0}), 
                  .c(pc_4[31:0]));
   add_32  XLXI_8 (.a(pc_4[31:0]), 
                  .b({Imm_32[29:0], N0, N0}), 
                  .c(branch_pc[31:0]));
   AND2  XLXI_9 (.I0(XLXN_14), 
                .I1(Branch), 
                .O(XLXN_15));
   MUX2T1_32  XLXI_10 (.I0(ALU_out_DUMMY[31:0]), 
                      .I1(Data_in[31:0]), 
                      .s(MemtoReg), 
                      .o(XLXN_17[31:0]));
   Ext_32  XLXI_12 (.imm_16(inst_field[15:0]), 
                   .Imm_32(Imm_32[31:0]));
   VCC  XLXI_13 (.P(V5));
   GND  XLXI_15 (.G(N0));
   MUX2T1_5  XLXI_16 (.I0(inst_field[20:16]), 
                     .I1(inst_field[15:11]), 
                     .s(RegDst), 
                     .o(XLXN_16[4:0]));
endmodule
`timescale 1ns / 1ps

module SCPU_MUSER_TOP(clk, 
                      Data_in, 
                      inst_in, 
                      INT, 
                      MIO_ready, 
                      reset, 
                      Addr_out, 
                      CPU_MIO, 
                      Data_out, 
                      mem_w, 
                      PC_out);

    input clk;
    input [31:0] Data_in;
    input [31:0] inst_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output mem_w;
   output [31:0] PC_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire [2:0] XLXN_7;
   
   Data_path_MUSER_TOP  XLXI_2 (.ALUSrc_B(XLXN_2), 
                               .ALU_Control(XLXN_7[2:0]), 
                               .Branch(XLXN_5), 
                               .clk(clk), 
                               .Data_in(Data_in[31:0]), 
                               .inst_field(inst_in[25:0]), 
                               .Jump(XLXN_4), 
                               .MemtoReg(XLXN_3), 
                               .RegDst(XLXN_1), 
                               .RegWrite(XLXN_6), 
                               .rst(reset), 
                               .ALU_out(Addr_out[31:0]), 
                               .Data_out(Data_out[31:0]), 
                               .PC_out(PC_out[31:0]));
   SCPU_ctrl  XLXI_3 (.Fun(inst_in[5:0]), 
                     .MIO_ready(MIO_ready), 
                     .OPcode(inst_in[31:26]), 
                     .ALUSrc_B(XLXN_2), 
                     .ALU_Control(XLXN_7[2:0]), 
                     .Branch(XLXN_5), 
                     .CPU_MIO(CPU_MIO), 
                     .Jump(XLXN_4), 
                     .MemtoReg(XLXN_3), 
                     .mem_w(mem_w), 
                     .RegDst(XLXN_1), 
                     .RegWrite(XLXN_6));
endmodule
`timescale 1ns / 1ps

module TOP(clk_100mhz, 
           K_COL, 
           RSTN, 
           SW, 
           Buzzer, 
           CR, 
           K_ROW, 
           LEDCLK, 
           LEDCLR, 
           LEDDT, 
           LEDEN, 
           RDY, 
           readn, 
           SEGCLK, 
           SEGCLR, 
           SEGDT, 
           SEGEN);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire [7:0] LE_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_4;
   wire XLXN_60;
   wire [1:0] XLXN_66;
   wire XLXN_68;
   wire XLXN_82;
   wire XLXN_83;
   wire [15:0] XLXN_84;
   wire [31:0] XLXN_86;
   wire [9:0] XLXN_88;
   wire [31:0] XLXN_90;
   wire XLXN_91;
   wire XLXN_97;
   wire XLXN_107;
   wire [0:0] XLXN_108;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  XLXI_2 (.clk(clk_100mhz), 
                        .Key_y(K_COL[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_4[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(K_ROW[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(rst), 
                        .SW_OK(SW_OK[15:0]));
   SEnter_2_32  XLXI_4 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_4[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(Ai[31:0]), 
                       .Bi(Bi[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   clk_div  XLXI_5 (.clk(clk_100mhz), 
                   .rst(rst), 
                   .SW2(SW_OK[2]), 
                   .clkdiv(Div[31:0]), 
                   .Clk_CPU(Clk_CPU));
   RAM_B  XLXI_10 (.addra(XLXN_88[9:0]), 
                  .clka(clk_100mhz), 
                  .dina(XLXN_90[31:0]), 
                  .wea(XLXN_108[0]), 
                  .douta(XLXN_86[31:0]));
   ROM_D  XLXI_11 (.a(PC[11:2]), 
                  .spo(inst[31:0]));
   VCC  XLXI_13 (.P(V5));
   GND  XLXI_14 (.G(N0));
   BUF  XLXI_16 (.I(V5), 
                .O(Buzzer));
   Multi_8CH32  XLXI_23 (.clk(XLXN_107), 
                        .Data0(CPU2IO[31:0]), 
                        .data1({N0, N0, PC[31:2]}), 
                        .data2(inst[31:0]), 
                        .data3(Counter_out[31:0]), 
                        .data4(Addr_out[31:0]), 
                        .data5(Data_out[31:0]), 
                        .data6(Data_in[31:0]), 
                        .data7(PC[31:0]), 
                        .EN(XLXN_60), 
                        .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0}), 
                        .point_in({Div[31:0], Div[31:0]}), 
                        .rst(rst), 
                        .Test(SW_OK[7:5]), 
                        .Disp_num(Disp_num[31:0]), 
                        .LE_out(LE_out[7:0]), 
                        .point_out(point_out[7:0]));
   MIO_BUS  XLXI_24 (.addr_bus(Addr_out[31:0]), 
                    .BTN(BTN_OK[3:0]), 
                    .clk(clk_100mhz), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_out(XLXN_97), 
                    .counter1_out(XLXN_82), 
                    .counter2_out(XLXN_83), 
                    .Cpu_data2bus(Data_out[31:0]), 
                    .led_out(XLXN_84[15:0]), 
                    .mem_w(XLXN_91), 
                    .ram_data_out(XLXN_86[31:0]), 
                    .rst(rst), 
                    .SW(SW_OK[15:0]), 
                    .counter_we(XLXN_68), 
                    .Cpu_data4bus(Data_in[31:0]), 
                    .data_ram_we(XLXN_108[0]), 
                    .GPIOe0000000_we(XLXN_60), 
                    .GPIOf0000000_we(GPIOF0), 
                    .Peripheral_in(CPU2IO[31:0]), 
                    .ram_addr(XLXN_88[9:0]), 
                    .ram_data_in(XLXN_90[31:0]));
   Counter  XLXI_26 (.clk(XLXN_107), 
                    .clk0(Div[6]), 
                    .clk1(Div[9]), 
                    .clk2(Div[11]), 
                    .counter_ch(XLXN_66[1:0]), 
                    .counter_val(CPU2IO[31:0]), 
                    .counter_we(XLXN_68), 
                    .rst(rst), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_OUT(XLXN_97), 
                    .counter1_OUT(XLXN_82), 
                    .counter2_OUT(XLXN_83));
   INV  XLXI_27 (.I(Clk_CPU), 
                .O(XLXN_107));
   SCPU_MUSER_TOP  XLXI_28 (.clk(Clk_CPU), 
                           .Data_in(Data_in[31:0]), 
                           .inst_in(inst[31:0]), 
                           .INT(XLXN_97), 
                           .MIO_ready(), 
                           .reset(rst), 
                           .Addr_out(Addr_out[31:0]), 
                           .CPU_MIO(), 
                           .Data_out(Data_out[31:0]), 
                           .mem_w(XLXN_91), 
                           .PC_out(PC[31:0]));
   GPIO  XLXI_30 (.clk(XLXN_107), 
                 .EN(GPIOF0), 
                 .P_Data(CPU2IO[31:0]), 
                 .rst(rst), 
                 .Start(Div[20]), 
                 .counter_set(XLXN_66[1:0]), 
                 .GPIOf0(), 
                 .led_clk(LEDCLK), 
                 .led_clrn(LEDCLR), 
                 .LED_out(XLXN_84[15:0]), 
                 .LED_PEN(LEDEN), 
                 .led_sout(LEDDT));
   Display  XLXI_33 (.clk(clk_100mhz), 
                    .flash(Div[25]), 
                    .Hexs(Disp_num[31:0]), 
                    .LES(LE_out[7:0]), 
                    .point(point_out[7:0]), 
                    .rst(rst), 
                    .Start(Div[20]), 
                    .Text(SW_OK[0]), 
                    .segclk(SEGCLK), 
                    .segclrn(SEGCLR), 
                    .SEGEN(SEGEN), 
                    .segsout(SEGDT));
endmodule
