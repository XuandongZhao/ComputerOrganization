////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Top_OExp03_IP2SOC.vf
// /___/   /\     Timestamp : 04/18/2017 15:16:57
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/zxd_CS/CC/OExp05-Datapath/Code/IO -sympath C:/zxd_CS/CC/OExp05-Datapath/Code -sympath C:/zxd_CS/CC/OExp05-Datapath/ipcore_dir -intstyle ise -family kintex7 -verilog C:/zxd_CS/CC/OExp05-Datapath/Top_OExp03_IP2SOC.vf -w C:/zxd_CS/CC/OExp05-Datapath/Code/Top_OExp03_IP2SOC.sch
//Design Name: Top_OExp03_IP2SOC
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module alu_MUSER_Top_OExp03_IP2SOC(A, 
                                   ALU_operation, 
                                   B, 
                                   overflow, 
                                   res, 
                                   zero);

    input [31:0] A;
    input [2:0] ALU_operation;
    input [31:0] B;
   output overflow;
   output [31:0] res;
   output zero;
   
   wire N0;
   wire [32:0] S;
   wire [31:0] XLXN_16;
   wire [31:0] XLXN_21;
   wire [31:0] XLXN_22;
   wire [31:0] XLXN_23;
   wire [31:0] XLXN_33;
   wire [31:0] XLXN_35;
   wire [31:0] XLXN_36;
   wire [31:0] res_DUMMY;
   
   assign res[31:0] = res_DUMMY[31:0];
   and32  XLXI_1 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_16[31:0]));
   ADC32  XLXI_3 (.A(A[31:0]), 
                 .B(XLXN_35[31:0]), 
                 .C0(ALU_operation[2]), 
                 .S(S[32:0]));
   xor32  XLXI_4 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_21[31:0]));
   nor32  XLXI_5 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_22[31:0]));
   MUX8T1_32  XLXI_7 (.I0(XLXN_16[31:0]), 
                     .I1(XLXN_36[31:0]), 
                     .I2(S[31:0]), 
                     .I3(XLXN_21[31:0]), 
                     .I4(XLXN_22[31:0]), 
                     .I5(XLXN_23[31:0]), 
                     .I6(S[31:0]), 
                     .I7({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, S[32]}), 
                     .s(ALU_operation[2:0]), 
                     .o(res_DUMMY[31:0]));
   or_bit_32  XLXI_8 (.A(res_DUMMY[31:0]), 
                     .o(zero));
   srl32  XLXI_10 (.A(A[31:0]), 
                  .B(B[31:0]), 
                  .res(XLXN_23[31:0]));
   SignalExt_32  XLXI_11 (.S(ALU_operation[2]), 
                         .So(XLXN_33[31:0]));
   xor32  XLXI_12 (.A(XLXN_33[31:0]), 
                  .B(B[31:0]), 
                  .res(XLXN_35[31:0]));
   or32  XLXI_13 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_36[31:0]));
   GND  XLXI_14 (.G(S[32]));
endmodule
`timescale 1ns / 1ps

module Data_path_MUSER_Top_OExp03_IP2SOC(ALUSrc_B, 
                                         ALU_Control, 
                                         Branch, 
                                         clk, 
                                         Data_in, 
                                         inst_field, 
                                         Jump, 
                                         MemtoReg, 
                                         RegDst, 
                                         RegWrite, 
                                         rst, 
                                         ALU_out, 
                                         Data_out, 
                                         PC_out);

    input ALUSrc_B;
    input [2:0] ALU_Control;
    input Branch;
    input clk;
    input [31:0] Data_in;
    input [25:0] inst_field;
    input Jump;
    input MemtoReg;
    input RegDst;
    input RegWrite;
    input rst;
   output [31:0] ALU_out;
   output [31:0] Data_out;
   output [31:0] PC_out;
   
   wire [31:0] Branch_offset;
   wire N0;
   wire [31:28] pc_4;
   wire V5;
   wire [4:0] XLXN_17;
   wire [31:0] XLXN_28;
   wire [31:0] XLXN_31;
   wire [31:0] XLXN_32;
   wire XLXN_43;
   wire XLXN_47;
   wire [31:0] XLXN_50;
   wire [31:0] XLXN_52;
   wire [31:0] XLXN_59;
   wire [31:0] XLXN_60;
   wire XLXN_64;
   wire [31:0] ALU_out_DUMMY;
   wire [31:0] Data_out_DUMMY;
   wire [31:0] PC_out_DUMMY;
   
   assign ALU_out[31:0] = ALU_out_DUMMY[31:0];
   assign Data_out[31:0] = Data_out_DUMMY[31:0];
   assign PC_out[31:0] = PC_out_DUMMY[31:0];
   MUX2T1_5  MUXD1 (.I0(inst_field[20:16]), 
                   .I1(inst_field[15:11]), 
                   .s(RegDst), 
                   .o(XLXN_17[4:0]));
   MUX2T1_32  MUXD2 (.I0(ALU_out_DUMMY[31:0]), 
                    .I1(Data_in[31:0]), 
                    .s(MemtoReg), 
                    .o(XLXN_28[31:0]));
   REG32  PC (.CE(XLXN_47), 
             .clk(clk), 
             .D(XLXN_60[31:0]), 
             .rst(rst), 
             .Q(PC_out_DUMMY[31:0]));
   alu_MUSER_Top_OExp03_IP2SOC  U1_1 (.A(XLXN_31[31:0]), 
                                     .ALU_operation(ALU_Control[2:0]), 
                                     .B(XLXN_32[31:0]), 
                                     .overflow(), 
                                     .res(ALU_out_DUMMY[31:0]), 
                                     .zero(XLXN_43));
   Ext_32  U2 (.imm_16(inst_field[15:0]), 
              .Imm_32(Branch_offset[31:0]));
   Regs  U2_2 (.clk(clk), 
              .L_S(RegWrite), 
              .rst(rst), 
              .R_addr_A(inst_field[25:21]), 
              .R_addr_B(inst_field[20:16]), 
              .Wt_addr(XLXN_17[4:0]), 
              .Wt_data(XLXN_28[31:0]), 
              .rdata_A(XLXN_31[31:0]), 
              .rdata_B(Data_out_DUMMY[31:0]));
   add_32  XLXI_3 (.a(PC_out_DUMMY[31:0]), 
                  .b({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, V5, N0, 
         N0}), 
                  .c(XLXN_50[31:0]));
   add_32  XLXI_4 (.a(XLXN_50[31:0]), 
                  .b({Branch_offset[29:0], N0, N0}), 
                  .c(XLXN_52[31:0]));
   MUX2T1_32  XLXI_5 (.I0(XLXN_50[31:0]), 
                     .I1(XLXN_52[31:0]), 
                     .s(XLXN_64), 
                     .o(XLXN_59[31:0]));
   MUX2T1_32  XLXI_6 (.I0(XLXN_59[31:0]), 
                     .I1({pc_4[31:28], inst_field[25:0], N0, N0}), 
                     .s(Jump), 
                     .o(XLXN_60[31:0]));
   MUX2T1_32  XLXI_10 (.I0(Data_out_DUMMY[31:0]), 
                      .I1(Branch_offset[31:0]), 
                      .s(ALUSrc_B), 
                      .o(XLXN_32[31:0]));
   AND2  XLXI_15 (.I0(XLXN_43), 
                 .I1(Branch), 
                 .O(XLXN_64));
   VCC  XLXI_16 (.P(XLXN_47));
   GND  XLXI_17 (.G(N0));
endmodule
`timescale 1ns / 1ps

module SCPU_MUSER_Top_OExp03_IP2SOC(clk, 
                                    Data_in, 
                                    inst_in, 
                                    INT, 
                                    MIO_ready, 
                                    reset, 
                                    Addr_out, 
                                    CPU_MIO, 
                                    Data_out, 
                                    mem_w, 
                                    PC_out);

    input clk;
    input [31:0] Data_in;
    input [31:0] inst_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output mem_w;
   output [31:0] PC_out;
   
   wire [2:0] XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_27;
   
   SCPU_ctrl  XLXI_1 (.Fun(inst_in[5:0]), 
                     .MIO_ready(MIO_ready), 
                     .OPcode(inst_in[31:26]), 
                     .ALUSrc_B(XLXN_27), 
                     .ALU_Control(XLXN_10[2:0]), 
                     .Branch(XLXN_12), 
                     .CPU_MIO(CPU_MIO), 
                     .Jump(XLXN_13), 
                     .MemtoReg(XLXN_14), 
                     .mem_w(mem_w), 
                     .RegDst(XLXN_16), 
                     .RegWrite(XLXN_11));
   Data_path_MUSER_Top_OExp03_IP2SOC  XLXI_2 (.ALUSrc_B(XLXN_27), 
                                             .ALU_Control(XLXN_10[2:0]), 
                                             .Branch(XLXN_12), 
                                             .clk(clk), 
                                             .Data_in(Data_in[31:0]), 
                                             .inst_field(inst_in[25:0]), 
                                             .Jump(XLXN_13), 
                                             .MemtoReg(XLXN_14), 
                                             .RegDst(XLXN_16), 
                                             .RegWrite(XLXN_11), 
                                             .rst(reset), 
                                             .ALU_out(Addr_out[31:0]), 
                                             .Data_out(Data_out[31:0]), 
                                             .PC_out(PC_out[31:0]));
endmodule
`timescale 1ns / 1ps

module Top_OExp03_IP2SOC(BTN_y, 
                         clk_100mhz, 
                         RSTN, 
                         SW, 
                         AN, 
                         BTN_x, 
                         Buzzer, 
                         CR, 
                         LED, 
                         led_clk, 
                         led_clrn, 
                         LED_PEN, 
                         led_sout, 
                         RDY, 
                         readn, 
                         SEGMENT, 
                         seg_clk, 
                         seg_clrn, 
                         SEG_PEN, 
                         seg_sout);

   (* LOC = "E13,F14,G14,D14" *) 
    input [3:0] BTN_y;
   (* LOC = "t9" *) 
    input clk_100mhz;
    input RSTN;
   (* LOC = "K13,K14,J13,J14,H13,H14,G12,F12" *) 
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire IO_clk;
   wire [15:0] LED_out;
   wire [7:0] LE_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire XLXN_153;
   wire XLXN_154;
   wire [1:0] XLXN_219;
   wire [4:0] XLXN_444;
   wire XLXN_455;
   wire XLXN_541;
   wire XLXN_544;
   wire [31:0] XLXN_556;
   wire [0:0] XLXN_557;
   wire [9:0] XLXN_558;
   wire [31:0] XLXN_559;
   wire XLXN_560;
   wire XLXN_579;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_444[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   SCPU_MUSER_Top_OExp03_IP2SOC  U1 (.clk(Clk_CPU), 
                                    .Data_in(Data_in[31:0]), 
                                    .inst_in(inst[31:0]), 
                                    .INT(XLXN_579), 
                                    .MIO_ready(), 
                                    .reset(rst), 
                                    .Addr_out(Addr_out[31:0]), 
                                    .CPU_MIO(), 
                                    .Data_out(Data_out[31:0]), 
                                    .mem_w(XLXN_544), 
                                    .PC_out(PC[31:0]));
   ROM_D  U2 (.a(PC[11:2]), 
             .spo(inst[31:0]));
   RAM_B  U3 (.addra(XLXN_558[9:0]), 
             .clka(XLXN_455), 
             .dina(XLXN_556[31:0]), 
             .wea(XLXN_557[0]), 
             .douta(XLXN_559[31:0]));
   MIO_BUS  U4 (.addr_bus(Addr_out[31:0]), 
               .BTN(BTN_OK[3:0]), 
               .clk(clk_100mhz), 
               .counter_out(Counter_out[31:0]), 
               .counter0_out(XLXN_579), 
               .counter1_out(XLXN_153), 
               .counter2_out(XLXN_154), 
               .Cpu_data2bus(Data_out[31:0]), 
               .led_out(LED_out[15:0]), 
               .mem_w(XLXN_544), 
               .ram_data_out(XLXN_559[31:0]), 
               .rst(rst), 
               .SW(SW_OK[15:0]), 
               .counter_we(XLXN_560), 
               .Cpu_data4bus(Data_in[31:0]), 
               .data_ram_we(XLXN_557[0]), 
               .GPIOe0000000_we(XLXN_541), 
               .GPIOf0000000_we(GPIOF0), 
               .Peripheral_in(CPU2IO[31:0]), 
               .ram_addr(XLXN_558[9:0]), 
               .ram_data_in(XLXN_556[31:0]));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPU2IO[31:0]), 
                   .data1({N0, N0, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(Counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(XLXN_541), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0}), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   SSeg7_Dev  U6 (.clk(clk_100mhz), 
                 .flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .rst(rst), 
                 .Start(Div[20]), 
                 .SW0(SW_OK[0]), 
                 .seg_clk(seg_clk), 
                 .seg_clrn(seg_clrn), 
                 .SEG_PEN(SEG_PEN), 
                 .seg_sout(seg_sout));
   SPIO  U7 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .P_Data(CPU2IO[31:0]), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(XLXN_219[1:0]), 
            .GPIOf0(), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(LED_out[15:0]), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_444[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Counter_x  U10 (.clk(IO_clk), 
                  .clk0(Div[6]), 
                  .clk1(Div[9]), 
                  .clk2(Div[11]), 
                  .counter_ch(XLXN_219[1:0]), 
                  .counter_val(CPU2IO[31:0]), 
                  .counter_we(XLXN_560), 
                  .rst(rst), 
                  .counter_out(Counter_out[31:0]), 
                  .counter0_OUT(XLXN_579), 
                  .counter1_OUT(XLXN_153), 
                  .counter2_OUT(XLXN_154));
   Seg7_Dev  U61 (.flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .Scan({SW_OK[1], Div[19:18]}), 
                 .SW0(SW_OK[0]), 
                 .AN(AN[3:0]), 
                 .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .PData_in(CPU2IO[31:0]), 
            .rst(rst), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   VCC  XLXI_1 (.P(V5));
   GND  XLXI_2 (.G(N0));
   BUF  XLXI_41 (.I(V5), 
                .O(Buzzer));
   INV  XLXI_53 (.I(clk_100mhz), 
                .O(XLXN_455));
   INV  XLXI_72 (.I(Clk_CPU), 
                .O(IO_clk));
endmodule
