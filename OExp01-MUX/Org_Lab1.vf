////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Org_Lab1.vf
// /___/   /\     Timestamp : 03/08/2017 11:06:08
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/PC/Desktop/OExp01-MUX/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/PC/Desktop/OExp01-MUX/Org_Lab1.vf -w C:/Users/PC/Desktop/OExp01-MUX/Code/Org_Lab1.sch
//Design Name: Org_Lab1
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Org_Lab1(BTN_y, 
                clk_100mhz, 
                RSTN, 
                SW, 
                AN, 
                BTN_x, 
                Buzzer, 
                CR, 
                LED, 
                led_clk, 
                led_clrn, 
                LED_PEN, 
                led_sout, 
                RDY, 
                readn, 
                SEGMENT, 
                seg_clk, 
                seg_clrn, 
                SEG_PEN, 
                seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] CNT;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_6;
   wire XLXN_20;
   wire [31:0] XLXN_39;
   wire [7:0] XLXN_40;
   wire [7:0] XLXN_41;
   wire [31:0] XLXN_50;
   wire [31:0] XLXN_53;
   wire [31:0] XLXN_74;
   wire [31:0] XLXN_75;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_6[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   clk_div  XLXI_1 (.clk(clk_100mhz), 
                   .rst(rst), 
                   .SW2(SW_OK[2]), 
                   .clkdiv(Div[31:0]), 
                   .Clk_CPU(Clk_CPU));
   SEnter_2_32  XLXI_4 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_6[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(Ai[31:0]), 
                       .Bi(Bi[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   SSeg7_Dev  XLXI_5 (.clk(clk_100mhz), 
                     .flash(Div[25]), 
                     .Hexs(XLXN_39[31:0]), 
                     .LES(XLXN_41[7:0]), 
                     .point(XLXN_40[7:0]), 
                     .rst(rst), 
                     .Start(Div[20]), 
                     .SW0(SW_OK[0]), 
                     .seg_clk(seg_clk), 
                     .seg_clrn(seg_clrn), 
                     .SEG_PEN(SEG_PEN), 
                     .seg_sout(seg_sout));
   Multi_8CH32  XLXI_6 (.clk(clk_100mhz), 
                       .Data0(Ai[31:0]), 
                       .data1(Bi[31:0]), 
                       .data2(Div[31:0]), 
                       .data3(CNT[31:0]), 
                       .data4(XLXN_74[31:0]), 
                       .data5(XLXN_75[31:0]), 
                       .data6(XLXN_50[31:0]), 
                       .data7(XLXN_53[31:0]), 
                       .EN(V5), 
                       .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(rst), 
                       .Test(SW_OK[7:5]), 
                       .Disp_num(XLXN_39[31:0]), 
                       .LE_out(XLXN_41[7:0]), 
                       .point_out(XLXN_40[7:0]));
   ROM_D  XLXI_7 (.a({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                 .spo(XLXN_50[31:0]));
   RAM_B  XLXI_8 (.addra({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                 .clka(XLXN_20), 
                 .dina(XLXN_50[31:0]), 
                 .wea(SW_OK[4]), 
                 .douta(XLXN_53[31:0]));
   SPIO  XLXI_9 (.clk(clk_100mhz), 
                .EN(V5), 
                .P_Data({SW[13:0], SW_OK[15:0], N0, N0}), 
                .rst(rst), 
                .Start(Div[20]), 
                .counter_set(), 
                .GPIOf0(), 
                .led_clk(led_clk), 
                .led_clrn(led_clrn), 
                .LED_out(), 
                .LED_PEN(LED_PEN), 
                .led_sout(led_sout));
   INV  XLXI_10 (.I(clk_100mhz), 
                .O(XLXN_20));
   VCC  XLXI_11 (.P(V5));
   GND  XLXI_12 (.G(N0));
   PIO  XLXI_13 (.clk(clk_100mhz), 
                .EN(V5), 
                .PData_in(Ai[31:0]), 
                .rst(N0), 
                .counter_set(), 
                .GPIOf0(), 
                .LED_out(LED[7:0]));
   Seg7_Dev  XLXI_16 (.flash(Div[25]), 
                     .Hexs(Disp_num[31:0]), 
                     .LES(LE_out[7:0]), 
                     .point(point_out[7:0]), 
                     .Scan({SW_OK[1], Div[19:18]}), 
                     .SW0(SW_OK[0]), 
                     .AN(AN[3:0]), 
                     .SEGMENT(SEGMENT[7:0]));
   BUF  XLXI_17 (.I(V5), 
                .O(Buzzer));
endmodule
