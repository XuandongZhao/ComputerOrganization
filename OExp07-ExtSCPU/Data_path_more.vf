////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Data_path_more.vf
// /___/   /\     Timestamp : 05/16/2017 15:17:41
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/zxd_CS/CC/OExp07-ExtSCPU/Code -sympath C:/zxd_CS/CC/OExp07-ExtSCPU/ipcore_dir -intstyle ise -family kintex7 -verilog C:/zxd_CS/CC/OExp07-ExtSCPU/Data_path_more.vf -w C:/zxd_CS/CC/OExp07-ExtSCPU/Code/Data_path_more.sch
//Design Name: Data_path_more
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Data_path_more(ALUSrc_B, 
                      ALU_Control, 
                      Branch, 
                      clk, 
                      DatatoReg, 
                      Data_in, 
                      inst_field, 
                      Jal, 
                      RegDst, 
                      RegWrite, 
                      rst, 
                      ALU_out, 
                      Data_out, 
                      overflow, 
                      PC_out, 
                      zero);

    input ALUSrc_B;
    input [2:0] ALU_Control;
    input [1:0] Branch;
    input clk;
    input [1:0] DatatoReg;
    input [31:0] Data_in;
    input [25:0] inst_field;
    input Jal;
    input RegDst;
    input RegWrite;
    input rst;
   output [31:0] ALU_out;
   output [31:0] Data_out;
   output overflow;
   output [31:0] PC_out;
   output zero;
   
   wire [31:0] Imm_32;
   wire N0;
   wire [31:28] PC;
   wire [31:0] PC_4;
   wire V5;
   wire XLXN_3;
   wire [31:0] XLXN_7;
   wire [31:0] XLXN_9;
   wire [31:0] XLXN_41;
   wire [31:0] XLXN_43;
   wire [4:0] XLXN_59;
   wire [4:0] XLXN_64;
   wire [31:0] XLXN_66;
   wire [31:0] ALU_out_DUMMY;
   wire [31:0] Data_out_DUMMY;
   wire [31:0] PC_out_DUMMY;
   
   assign ALU_out[31:0] = ALU_out_DUMMY[31:0];
   assign Data_out[31:0] = Data_out_DUMMY[31:0];
   assign PC_out[31:0] = PC_out_DUMMY[31:0];
   alu  U1 (.A(XLXN_7[31:0]), 
           .ALU_operation(ALU_Control[2:0]), 
           .B(XLXN_9[31:0]), 
           .overflow(overflow), 
           .res(ALU_out_DUMMY[31:0]), 
           .zero(zero));
   Regs  U2 (.clk(clk), 
            .L_S(RegWrite), 
            .rst(rst), 
            .R_addr_A(inst_field[25:21]), 
            .R_addr_B(inst_field[20:16]), 
            .Wt_addr(XLXN_59[4:0]), 
            .Wt_data(XLXN_66[31:0]), 
            .rdata_A(XLXN_7[31:0]), 
            .rdata_B(Data_out_DUMMY[31:0]));
   REG32  U3 (.CE(XLXN_3), 
             .clk(clk), 
             .D(XLXN_43[31:0]), 
             .rst(rst), 
             .Q(PC_out_DUMMY[31:0]));
   add_32  XLXI_4 (.a(PC_out_DUMMY[31:0]), 
                  .b({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, V5, N0, 
         N0}), 
                  .c(PC_4[31:0]));
   add_32  XLXI_5 (.a(PC_4[31:0]), 
                  .b({Imm_32[29:0], N0, N0}), 
                  .c(XLXN_41[31:0]));
   MUX4T1_32  XLXI_6 (.I0(PC_4[31:0]), 
                     .I1(XLXN_41[31:0]), 
                     .I2({PC[31:28], inst_field[25:0], N0, N0}), 
                     .I3(XLXN_7[31:0]), 
                     .s(Branch[1:0]), 
                     .o(XLXN_43[31:0]));
   MUX2T1_5  XLXI_8 (.I0(inst_field[20:16]), 
                    .I1({V5, V5, V5, V5, V5}), 
                    .s(Jal), 
                    .o(XLXN_64[4:0]));
   MUX2T1_5  XLXI_9 (.I0(XLXN_64[4:0]), 
                    .I1(inst_field[15:11]), 
                    .s(RegDst), 
                    .o(XLXN_59[4:0]));
   MUX4T1_32  XLXI_10 (.I0(ALU_out_DUMMY[31:0]), 
                      .I1(Data_in[31:0]), 
                      .I2({inst_field[15:0], N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0}), 
                      .I3(PC_4[31:0]), 
                      .s(DatatoReg[1:0]), 
                      .o(XLXN_66[31:0]));
   Ext_32  XLXI_11 (.imm_16(inst_field[15:0]), 
                   .Imm_32(Imm_32[31:0]));
   MUX2T1_32  XLXI_12 (.I0(Data_out_DUMMY[31:0]), 
                      .I1(Imm_32[31:0]), 
                      .s(ALUSrc_B), 
                      .o(XLXN_9[31:0]));
   VCC  XLXI_14 (.P(XLXN_3));
   VCC  XLXI_15 (.P(V5));
   GND  XLXI_16 (.G(N0));
endmodule
